plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.sopotek'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('springAiVersion', "1.0.0-M4")
    set('springBootAdminVersion', "3.4.1")
    set('springGrpcVersion', "0.3.0-SNAPSHOT")
    set('springShellVersion', "3.4.0")
}

dependencies {

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation group: 'javax.cache', name: 'cache-api', version: '1.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Spring Batch, Shell, and Quartz
    implementation 'org.springframework.shell:spring-shell-starter'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    // Spring Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:3.9.0'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka-test'

    // Spring GRPC
    implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'

    // Spring Doc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    // Admin Starter
    implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.1'
    implementation 'de.codecentric:spring-boot-admin-starter-server:3.4.1'
    // QR CODE
    implementation 'net.glxn:qrgen:1.4'
    // JSON and XML Processing
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.2'

    // JWT and Authentication
    implementation 'com.nimbusds:nimbus-jose-jwt:9.47'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'

    // Stellar SDK
    implementation 'network.lightsail:stellar-sdk:1.0.0'

    // Security Libraries
    implementation 'org.bouncycastle:bcprov-jdk18on:1.79'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.76'

    // Utility Libraries
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'commons-fileupload:commons-fileupload:1.5'
    implementation 'org.apache.commons:commons-email:1.6.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.github.ua-parser:uap-java:1.6.1'
    implementation 'org.jetbrains:annotations:24.0.0'
// https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '6.6.4.Final', ext: 'pom'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

// https://mvnrepository.com/artifact/org.springframework/spring-orm
    implementation group: 'org.springframework', name: 'spring-orm', version: '6.2.1'

  // Spring ORM
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '9.1.0'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.12'
    implementation 'org.hibernate:hibernate-core:6.2.8.Final' // Use your Hibernate version
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.thymeleaf:thymeleaf-spring6:3.1.3.RELEASE'

    // Hazelcast
    implementation 'com.hazelcast:hazelcast:5.5.0'
    implementation 'com.hazelcast:hazelcast-spring:5.2.3'
    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    // AI and TensorFlow
    implementation 'org.tensorflow:tensorflow-core-platform:1.0.0'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-markdown-document-reader'
    implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
    implementation group: 'org.springframework.ai', name: 'spring-ai-core', version: '1.0.0-M4'



    // OAuth2 and Security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'  // For JWT decoding

    // Metrics
    implementation 'io.micrometer:micrometer-registry-jmx:1.14.2'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing:1.4.0'
    implementation 'io.opentelemetry:opentelemetry-api:1.45.0'

    implementation 'org.springframework.security:spring-security-config'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.shell:spring-shell-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.grpc:spring-grpc-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'jakarta_omit'
                option '@generated=omit'
            }
        }
    }
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
