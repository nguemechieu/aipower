
# --- Core Settings ---
spring.application.name=AIPower
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
aipower.jwt.secret.key=${AIPOWER_SECRET_KEY:dGhpcy1pcy1hLXN1cGVyLXNlY3VyZS1rZXktZm9yLUpXVC1hdXRoLXNlcnZpY2Vz}
aipower.jwt.token-expiration-time=${AIPOWER_JWT_TOKEN_EXPIRATION_TIME:86400}
aipower.jwt.refresh-token-expiration-time=${AIPOWER_JWT_REFRESH_TOKEN_EXPIRATION_TIME:86400000}
logging.level.org.springframework.security=DEBUG

log.cleanup.file.path=/path/to/logs/logfile.log
log.cleanup.size.threshold=10485760
server.error.include-binding-errors=always
spring.mvc.converters.preferred-json-mapper=jackson
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=UTC

# --- Logging Configuration ---
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.springframework=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:INFO}
logging.level.com.sopotek=${LOGGING_LEVEL_COM_SOPOTEK:DEBUG}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_OR_HIBERNATE_SQL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_OR_HIBERNATE_BINDER:TRACE}
logging.level.de.codecentric.boot.admin.server=WARN
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n}
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG

# --- Server Settings ---
server.address=localhost
server.port=8080
server.servlet.context-path=/
server.servlet.session.store-dir=session
server.servlet.session.cookie.name=SESSION_COOKIE
server.servlet.session.cookie.max-age=3600
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=lax
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.error.include-exception=true
server.error.include-stacktrace=${SERVER_ERROR_INCLUDE_STACKTRACE:never}
server.error.include-message=${SERVER_ERROR_INCLUDE_MESSAGE:always}
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=/path/to/logs
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D ms
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.max-days=1
server.forward-headers-strategy=framework
server.reactive.session.cookie.same-site=lax
# --- SSL Configuration ---
server.ssl.enabled=${SERVER_SSL_ENABLED:false}
server.ssl.key-store-type=${SERVER_SSL_KEY_STORE_TYPE:JKS}
server.ssl.key-store=${SERVER_SSL_KEY_STORE:classpath:your_ssl_key_store}
server.ssl.key-store-password=${SERVER_SSL_KEY_STORE_PASSWORD:your_ssl_key_store_password}
server.ssl.key-alias=${SERVER_SSL_KEY_ALIAS:your_ssl_key_alias}
server.ssl.trust-store=${SERVER_SSL_TRUST_STORE:classpath:your_ssl_trust_store}
server.ssl.trust-store-password=${SERVER_SSL_TRUST_STORE_PASSWORD:your_ssl_trust_store_password}
server.tomcat.accesslog.prefix=tomcat.accesslog
server.tomcat.resource.allow-caching=true
server.tomcat.resource.cache-ttl=10


# --- DataSource Configuration ---
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/aipower}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:Bigboss307$}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:10}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.transaction.jta.platform=org.springframework.transaction.jta.JtaTransactionManager
spring.thymeleaf.check-template-location=true
spring.jpa.open-in-view=false

# --- Admin Server Configuration ---
spring.boot.admin.client.url=http://localhost:8081
spring.boot.admin.client.instance.service-base-url=http://localhost:8080
spring.boot.admin.client.instance.service-url=http://localhost:8080
spring.boot.admin.client.instance.management-url=http://localhost:8081/actuator
spring.boot.admin.client.instance.health-url=http://localhost:8080/actuator/health
spring.boot.admin.client.username=${ADMIN_USERNAME:admin}
spring.boot.admin.client.password=${ADMIN_PASSWORD:password}
spring.boot.admin.client.instance.metadata.instance-id=AIP-2024
spring.boot.admin.client.instance.metadata.app-name=AIPOWER-ADMIN
spring.boot.admin.client.instance.metadata.app-icon=classpath:favicon.ico
spring.boot.admin.client.instance.metadata.app-description=Spring Boot admin application for AIPower

# --- Security Configuration ---
spring.security.user.name=yourUsername
spring.security.user.password=yourPassword
# --- Remaining Configurations ---
# Include all other necessary configurations (Kafka, Geo API, Mail, etc.) below...
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false



# --- Management and Monitoring ---
management.server.port=${MANAGEMENT_SERVER_PORT:8081}
management.server.ssl.enabled=${MANAGEMENT_SERVER_SSL_ENABLED:false}
management.info.java.enabled=true
management.info.process.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-components=always
management.endpoint.health.show-details=always
management.endpoints.web.exposure.exclude=env,health,info,loggers,metrics,prometheus,trace
management.server.base-path=/
management.jmx.metrics.export.enabled=true
management.info.os.enabled=true
management.info.git.enabled=true
management.info.git.mode=simple
management.atlas.metrics.export.config-refresh-frequency=10
management.elastic.metrics.export.user-name=admin
management.elastic.metrics.export.password=admin1234
management.metrics.data.repository.autotime.percentiles-histogram=true

# --- Mail Configuration ---
spring.mail.protocol=${MAIL_PROTOCOL:smtp}
spring.mail.properties.mail.smtp.connectiontimeout=${MAIL_SMTP_CONNECTIONTIMEOUT:5000}
spring.mail.host=${MAIL_HOST:smtp-mail.outlook.com}
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.quitwait=false
spring.mail.test-connection=true
spring.boot.admin.notify.mail.base-url=http://localhost:8080

spring.mail.properties.mail.smtp.timeout=${MAIL_SMTP_TIMEOUT:30000}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@example.com}
spring.mail.password=${MAIL_PASSWORD:your-email-password}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.starttls.required=${MAIL_SMTP_STARTTLS_REQUIRED:true}

# --- Swagger Configuration ---
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui/index.html

# --- OpenAI ---
openai.api.url=${OPENAI_API_URL:https://api.openai.com/v1/chat/completions}
openai.api.key=${OPENAI_API_KEY:your-openai-api-key}
openai.api.model=${OPENAI_API_MODEL:gpt-3.5-turbo}
spring.ai.openai.api-key=${OPENAI_API_KEY:your-openai-api}
spring.ai.openai.audio.speech.project-id=AiPower
spring.ai.openai.base-url=${OPENAI_API_BASE_URL: your-openai-api-base-url}

# Oanda API
oanda.api.url=${OANDA_API_URL:https://api-fxpractice.oanda.com/v3/accounts/{account_id}/transactions}
oanda.api.account.id=${OANDA_API_ACCOUNT_ID:101-004-1234567-001}
oanda.api.access.token=${OANDA_API_ACCESS_TOKEN:your-oanda-access-token}
# --- Kafka Configuration ---
spring.kafka.admin.auto-create=true
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.admin.modify-topic-configs=true
spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.observation-enabled=false
spring.kafka.client-id=kafka-client
spring.kafka.streams.application-id=aipower
spring.kafka.streams.cleanup.on-startup=true
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.client-id=aipower-kafka-producer-client-id
news.api.key=${NEWS_API_KEY:401ac9bf2f34448e876ff0426715db8f}
news.api.url=${NEWS_API_URL:https://news.api.org/api/v1/}
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect


# --- Geo API Configuration ---
geo.api.url=${GEO_API_URL:https://geo.api.here.com/v1/geocode}
geo.api.key=${GEO_API_KEY:your-here-app-id}

# --- Profile Management ---
# Include profile-specific files for overriding:
spring.profiles.include=pro,dev
# --- Spring Boot Admin ---
# Client Configuration

# URL where the backend service is accessible
# Actuator Configuration
# Timeout Configuration
spring.boot.admin.client.connect-timeout=5000
spring.boot.admin.client.read-timeout=5000
spring.boot.admin.client.instance.name=${SPRING_APPLICATION_NAME:AIPower-Admin-Client}
spring.boot.admin.client.instance.service-path=/
spring.boot.admin.instance-auth.default-password=${ADMIN_PASSWORD:your_password}
spring.boot.admin.instance-auth.default-user-name=${ADMIN_USERNAME:your_username}
spring.boot.admin.client.instance.service-host-type=host_name
spring.main.banner-mode=off
spring.boot.admin.client.instance.metadata.app-version=${SPRING_APPLICATION_VERSION:1.0.0}
spring.boot.admin.client.instance.metadata.app-type=social-network
spring.boot.admin.client.instance.metadata.app-stack=Spring Boot, Java, Spring Security, Spring Boot Admin, OpenAI, Kafka, Geo API, Spring Data J

spring.boot.admin.client.instance.metadata.app-url=https://github.com/nguemechieu/aipower
spring.boot.admin.client.instance.metadata.app-icon-url=https://github.com/nguemechieu/aipower/blob/main/src/
spring.boot.admin.client.instance.metadata.app-name-color=black
spring.boot.admin.client.instance.metadata.app-description-color=gray
spring.boot.admin.client.instance.metadata.app-version-color=blue
spring.devtools.restart.enabled=${DEV_TOOLS_RESTART_ENABLED:true}
spring.devtools.livereload.port=8083
spring.devtools.livereload.enabled=${DEV_TOOLS_LIVERELOAD_ENABLED:true}
stellar.public=${STELLAR_LUMEN_PUBLIC_KEY:GCA606160736786905255765637488432199219}
stellar.secret=${STELLAR_LUMEN_SECRET_KEY:GCA6061607367869052557656374884}
# TELEGRAM
telegram.bot.token=${TELEGRAM_BOT_TOKEN:your-telegram-token}
spring.jmx.default-domain=aipower
spring.jmx.enabled=true
server.tomcat.basedir=lib/tomcat

spring.web.resources.add-mappings=true
spring.mvc.view.prefix=/static/
spring.mvc.view.suffix=.html

# COINBASE API
coinbase.api.base-url = https://api.coinbase.com/v3

coinbase.api.key =${COINBASE_API_KEY:your-coinbase-api-key}
coinbase.api.secret =${COINBASE_API_SECRET:your-coinbase-api-secret}
coinbase.api.passphrase =${COINBASE_API_PASSPHRASE:your-coinbase-api-passphrase}

# Binance US API
binanceus.api.key=${BINANCE_API_KEY: 1234TYRJUT}
binanceus.api.secret=${BINANCE_SECRET_KEY: 1234567890}

# CORS CONFIG
spring.security.cors.allowed-origins=https://tradeadviser.org, https://localhost:3000, http://localhost:8080, http://localhost:8081, https://localhost3001
spring.security.filter.dispatcher-types=include
spring.security.user.roles=ADMIN,USER,MANAGER,EMPLOYEE

spring.boot.admin.context-path=/admin
spring.boot.admin.ui.login-icon="login"
spring.boot.admin.ui.public-url="http://localhost:8080"
spring.boot.admin.notify.telegram.auth-token=${TELEGRAM_BOT_TOKEN:your-telegram-token}
spring.boot.admin.notify.telegram.chat-id=${TELEGRAM_CHAT_ID:your-telegram-chat-id}
spring.boot.admin.notify.telegram.enabled=true
spring.main.web-application-type=reactive
spring.docker.compose.file=compose.yaml



