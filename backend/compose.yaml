services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8091:8080" # UI accessible at http://localhost:8091
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
    networks:
      - kafka-network

  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: aipower
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 127.0.0.1:9092
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3307/aipower?useSSL=false
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      SPRING_CLOUD_STREAM_KAFKA_BINDER_CLIENT_ID: ${KAFKA_CLIENT_ID}
      SPRING_CLOUD_STREAM_KAFKA_BINDER_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP}
      SPRING_CLOUD_STREAM_KAFKA_BINDER_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_CLOUD_STREAM_KAFKA_BINDER_PRODUCER_VALUE_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_CLOUD_STREAM_KAFKA_BINDER_PRODUCER_ACKS: all
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    depends_on:
      - kafka
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aipower-network
      - kafka-network

    env_file:
      - .env

volumes:
  mysql-data:

networks:
  kafka-network:
  aipower-network:
    driver: bridge
