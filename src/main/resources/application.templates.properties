# --- Core Settings ---
spring.application.name=${SPRING_APPLICATION_NAME:AIPOWER}
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
application.secret.key=${APPLICATION_SECRET_KEY:your-secret-key}

# --- Logging Configuration ---
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.springframework=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:INFO}
logging.level.com.sopotek=${LOGGING_LEVEL_COM_SOPOTEK:DEBUG}
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_ORG_HIBERNATE_BINDER:TRACE}
logging.level.com.hazelcast=DEBUG

# --- Server Settings ---
server.port=${SERVER_PORT:8080}
server.ssl.enabled=${SERVER_SSL_ENABLED:false}
server.error.include-stacktrace=${SERVER_ERROR_INCLUDE_STACKTRACE:never}
server.error.include-message=${SERVER_ERROR_INCLUDE_MESSAGE:always}

# --- DataSource Configuration ---
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/your_database_name}
spring.datasource.username=${DB_USERNAME:your_database_username}
spring.datasource.password=${DB_PASSWORD:your_database_password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:10}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}

# --- JPA Configuration ---
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=${JPA_DIALECT:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.open-in-view=false

# --- Security Configuration ---
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:your-github-client-id}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:your-github-client-secret}
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:password}

# --- Management and Monitoring ---
management.server.port=${MANAGEMENT_SERVER_PORT:8081}
management.endpoints.web.exposure.include=${MANAGEMENT_WEB_EXPOSURE_INCLUDE:*}
management.endpoint.health.show-details=${MANAGEMENT_HEALTH_SHOW_DETAILS:always}

# --- Mail Configuration ---
spring.mail.host=${MAIL_HOST:smtp.live.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@example.com}
spring.mail.password=${MAIL_PASSWORD:your-email-password}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE:true}

# --- Swagger Configuration ---
springdoc.api-docs.enabled=${SWAGGER_API_DOCS_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}
springdoc.api-docs.path=${SWAGGER_API_DOCS_PATH:/api-docs}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH:/swagger-ui/index.html}

# --- OpenAI ---
openai.api.url=${OPENAI_API_URL:https://api.openai.com/v1/chat/completions}
openai.api.key=${OPENAI_API_KEY:your-openai-api-key}

# --- Cache Configuration ---
spring.cache.type=jcache
spring.cache.jcache.provider=com.hazelcast.cache.HazelcastCachingProvider

# --- Spring Boot Admin ---
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.instance.name=${SPRING_APPLICATION_NAME:AIPOWER}
spring.boot.admin.client.instance.health-url=http://localhost:8081/actuator/health
spring.boot.admin.client.instance.management-url=http://localhost:8081/actuator

# --- OAuth2 Google Configuration ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE:openid,profile,email}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# --- Kafka Configuration ---
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:ai-power-consumer}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
