# --- Core Settings ---
spring.application.name=${SPRING_APPLICATION_NAME:AIPOWER}
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
application.secret.key=11213456y7uy-9oiuhh98
# --- Logging Configuration ---
logging.level.root=${LOGGING_LEVEL_ROOT:DEBUG}
logging.level.org.springframework=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:INFO}
logging.level.com.sopotek=${LOGGING_LEVEL_COM_SOPOTEK:DEBUG}
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n}
logging.pattern.file=${LOGGING_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n}
logging.level.org.springframework.boot.actuate=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT_ACTUATE:DEBUG}
logging.level.org.springframework.jmx=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JMX:DEBUG}
logging.level.jakarta.activation=INFO
logging.level.org.springframework.mail=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# --- Security Configuration ---
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:your-github-client-id}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:your-github-client-secret}
spring.security.oauth2.client.registration.github.scope=${GITHUB_SCOPE:read:user}
spring.jmx.enabled=true

spring.jmx.default-domain=aipower-application

# --- Server Settings ---

server.tomcat.accesslog.suffix=aipower-application.log
server.tomcat.accesslog.enabled=${SERVER_TOMCAT_ACCESSLOG_ENABLED:true}
server.tomcat.threads.max=${SERVER_TOMCAT_THREADS_MAX:200}
server.max-http-request-header-size=${SERVER_MAX_HTTP_REQUEST_HEADER_SIZE:8192}
server.tomcat.max-swallow-size=${SERVER_TOMCAT_MAX_SWALLOW_SIZE:2000000}
server.tomcat.max-http-form-post-size=${SERVER_TOMCAT_MAX_HTTP_FORM_POST_SIZE:20971521}
server.port=${SERVER_PORT}
server.tomcat.accesslog.max-days=5
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D ms
server.error.include-stacktrace=${SERVER_ERROR_INCLUDE_STACKTRACE:never}
server.error.include-message=${SERVER_ERROR_INCLUDE_MESSAGE:always}
server.error.whitelabel.enabled=${SERVER_ERROR_WHITELABEL_ENABLED:true}
server.tomcat.threads.min-spare=10
server.error.path=${SERVER_ERROR_PATH:/error}
server.servlet.session.cookie.max-age=${SERVER_SERVLET_SESSION_COOKIE_MAX_AGE:10}
server.compression.mime-types=${SERVER_COMPRESSION_MIME_TYPES:application/json}
server.compression.min-response-size=${SERVER_COMPRESSION_MIN_RESPONSE_SIZE:2048}
server.tomcat.max-connections=${SERVER_TOMCAT_MAX_CONNECTIONS:1000}
server.ssl.enabled=${SERVER_SSL_ENABLED:true}
server.tomcat.connection-timeout=20000
server.servlet.application-display-name=${SPRING_APPLICATION_NAME}
server.ssl.key-password=${SERVER_SSL_KEY_PASSWD:Bitcoin}
server.ssl.key-store-type=${SERVER_SSL_KEY_STORE_TYPE:PKCS12}
server.ssl.key-store=${SERVER_SSL_KEY_STORE:classpath:keystore.p12}
server.ssl.key-alias=${SERVER_SSL_KEY_ALIAS:tomcat}
server.ssl.trust-store=${SERVER_SSL_TRUST_STORE:classpath:truststore.jks}
# --- DataSource Configuration ---
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/tradeadviser}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=${DB_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:10}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.leak-detection-threshold=${HIKARI_LEAK_DETECTION_THRESHOLD:2000}
spring.datasource.hikari.validation-timeout=${HIKARI_VALIDATION_TIMEOUT:5000}
spring.datasource.hikari.pool-name=${HIKARI_POOL_NAME:HikariPool}

# --- JPA Configuration ---
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=${JPA_DIALECT:org.hibernate.dialect.MySQLDialect}

# --- Management and Health ---

management.info.java.enabled=true
management.metrics.data.repository.autotime.percentiles-histogram=true
management.otlp.metrics.export.url=http://localhost:8081
management.elastic.metrics.export.pipeline= true
management.endpoint.health.group.diskSpace.include=diskSpace,db,ping
management.endpoint.health.group.diskSpace.show-details=always
management.atlas.metrics.export.uri=http://localhost:8081
management.endpoint.health.enabled=${MANAGEMENT_HEALTH_ENABLED:true}
management.endpoint.info.enabled=${MANAGEMENT_INFO_ENABLED:true}
management.endpoints.web.base-path=${MANAGEMENT_WEB_BASE_PATH:/actuator}
management.server.port=8081
management.endpoints.web.exposure.include=${MANAGEMENT_WEB_EXPOSURE_INCLUDE:*}
management.endpoint.health.show-details=${MANAGEMENT_HEALTH_SHOW_DETAILS:always}
management.endpoint.health.roles=${MANAGEMENT_HEALTH_GROUP_AI_POWER_ROLES:USER,ADMIN,EMPLOYEE,MANAGER}

# --- Swagger Configuration ---
springdoc.api-docs.enabled=${SWAGGER_API_DOCS_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}
springdoc.api-docs.path=${SWAGGER_API_DOCS_PATH:api-docs}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH:swagger-ui/index.html}
springdoc.swagger-ui.operationsSorter=${SWAGGER_UI_OPERATIONS_SORTER:method}
springdoc.swagger-ui.tagsSorter=${SWAGGER_UI_TAGS_SORTER:alpha}

# --- Mail Configuration ---
spring.mail.host=${MAIL_HOST:smtp.live.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@example.com}
spring.mail.password=${MAIL_PASSWORD:your-email-password}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.connectiontimeout=${MAIL_SMTP_CONNECTIONTIMEOUT:5000}
spring.mail.properties.mail.smtp.timeout=${MAIL_SMTP_TIMEOUT:3000}
spring.mail.properties.mail.smtp.writetimeout=${MAIL_SMTP_WRITETIMEOUT:5000}
spring.mail.properties.mail.debug=true
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration

spring.jpa.properties.hibernate.format_sql=true

# --- Security for Spring Boot Admin ---
spring.boot.admin.client.url=http://localhost:8081
spring.security.user.name=${ADMIN_USERNAME:bigbossmanager}
spring.security.user.password=${ADMIN_PASSWORD:Bigboss307$}
spring.boot.admin.discovery.converter.health-endpoint-path=${ADMIN_DISCOVERY_HEALTH_ENDPOINT:http://localhost:8080}
spring.boot.admin.context-path=${ADMIN_CONTEXT_PATH:/admin}
spring.boot.admin.notify.discord.webhook-url=${ADMIN_NOTIFY_DISCORD_WEBHOOK:https://discord.com/api/webhooks/87654321098765}
spring.boot.admin.notify.slack.webhook-url=${ADMIN_NOTIFY_SLACK_WEBHOOK:https://hooks.slack.com/services/T02345678/B0123}
spring.boot.admin.client.instance.service-url=http://localhost:8081
spring.boot.admin.client.instance.health-url=http://localhost:8081/actuator/health
spring.boot.admin.client.instance.management-url=http://localhost:8081/actuator
spring.boot.admin.client.instance.name=AIPOWER
spring.boot.admin.client.instance.metadata.application-name=AIPOWER
spring.boot.admin.client.instance.metadata.version=1.0.0
spring.boot.admin.client.instance.metadata.spring-boot-version=2.5.3
spring.boot.admin.client.instance.metadata.java-version=23
spring.boot.admin.client.instance.metadata.os-name=Linux
spring.boot.admin.client.instance.metadata.os-version=5.16.0
spring.boot.admin.client.instance.metadata.machine-id=67890123456789012345678
spring.boot.admin.client.instance.metadata.app-version=1.0.0
spring.boot.admin.client.instance.metadata.app-name-full=AIPower
spring.boot.admin.client.instance.metadata.app-name-short=AIp
spring.boot.admin.client.instance.metadata.app-version-full=AI Power
spring.boot.admin.client.instance.metadata.app-name-full-short=AIp
spring.boot.admin.client.instance.service-base-url=http://localhost:8081
spring.boot.admin.client.instance.service-path=/services


# --- Telegram Configuration ---
telegram.bot.token=${TELEGRAM_API_KEY:your-telegram-api-key}

# --- News API Configuration ---
news.api.key=${NEWS_API_KEY:401ac9bf2f34448e876ff0426715db8f}
news.api.url=${NEWS_API_URL:https://newsapi.org/v2/top-headlines?country=us&apiKey=${NEWS_API_KEY}}

# --- OAuth2 Google Configuration ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE:openid, profile, email}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:{baseUrl}/login/oauth2/code/google}
spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTHORIZATION_URI:https://accounts.google.com/o/oauth2/auth}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI:https://oauth2.googleapis.com/token}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI:https://www.googleapis.com/oauth2/v3/userinfo}
spring.security.oauth2.client.provider.google.jwk-set-uri=${GOOGLE_JWK_SET_URI:https://www.googleapis.com/oauth2/v3/certs}

# --- OpenAI Configuration ---
openai.api.url=${OPEN_AI_API_URL:https://api.openai.com/v1/chat/completions}
openai.api.key=${OPEN_AI_API_KEY:your-openai-api-key}

spring.thymeleaf.check-template-location=false

# Quartz Scheduler Configuration

# Quartz Scheduler instance name
spring.quartz.scheduler-name=MyQuartzScheduler

# Quartz Scheduler thread pool size (default is 10)
spring.quartz.properties.org.quartz.threadPool.threadCount=10

# Quartz Scheduler job store type (Memory-based or JDBC-based)
spring.quartz.job-store-type=memory

# Configure the Quartz instance ID
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO




# Quartz Startup Delay (Optional, delay in seconds before starting Quartz Scheduler)
spring.quartz.startup-delay=5
# Logging Quartz Scheduling
logging.level.org.quartz=DEBUG
logging.level.org.springframework.scheduling.quartz=DEBUG


# Quartz Overwrite Existing Jobs (Optional)
spring.quartz.overwrite-existing-jobs=true