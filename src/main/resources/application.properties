# --- Core Settings ---
spring.application.name=${SPRING_APPLICATION_NAME:AIPOWER}
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
application.secret.key=${APPLICATION_SECRET_KEY:your-secret-key}

# --- Logging Configuration ---
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.springframework=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:INFO}
logging.level.com.sopotek=${LOGGING_LEVEL_COM_SOPOTEK:DEBUG}
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_OR_HIBERNATE_SQL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_OR_HIBERNATE_BINDER:TRACE}
logging.level.com.hazelcast=DEBUG

# --- Server Settings ---

server.address=localhost
server.servlet.context-path=/
server.servlet.session.store-dir=session
server.servlet.session.cookie.name=${SESSION_COOKIE_NAME:SESSION}
server.servlet.session.cookie.max-age=${SESSION_COOKIE_MAX_AGE:3600}
server.servlet.session.cookie.http-only=${SESSION_COOKIE_HTTP_ONLY:true}
server.servlet.session.cookie.path=${SESSION_COOKIE_PATH:/}
server.servlet.session.cookie.same-site=${SESSION_COOKIE_SAME_SITE:Lax}
server.error.include-exception=true
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D ms
server.tomcat.accesslog.max-days=1

server.tomcat.accesslog.directory=logs/
server.tomcat.basedir=session
server.error.whitelabel.enabled=true
server.tomcat.accesslog.suffix=.log

server.servlet.encoding.force=true
server.servlet.encoding.force-request=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.application-display-name=AIPOWER-SERVER
server.port=${SERVER_PORT:8080}
server.ssl.enabled=${SERVER_SSL_ENABLED:false}
server.error.include-stacktrace=${SERVER_ERROR_INCLUDE_STACKTRACE:never}
server.error.include-message=${SERVER_ERROR_INCLUDE_MESSAGE:always}
server.servlet.session.cookie.secure=${SERVER_SESSION_COOKIE_SECURE:false}
server.ssl.key-store-type=${SERVER_SSL_KEY_STORE_TYPE:JKS}
server.ssl.key-store=${SERVER_SSL_KEY_STORE:classpath:your_ssl_key_store}
server.ssl.key-store-password=${SERVER_SSL_KEY_STORE_PASSWORD:your_ssl_key_store_password}
server.ssl.key-alias=${SERVER_SSL_KEY_ALIAS:your_ssl_key_alias}
server.ssl.trust-store=${SERVER_SSL_TRUST_STORE:classpath:your_ssl_trust_store}
server.ssl.trust-store-password=${SERVER_SSL_TRUST_STORE_PASSWORD:your_ssl_trust_store_password}

# --- DataSource Configuration ---
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/your_database_name}
spring.datasource.username=${DB_USERNAME:your_database_username}
spring.datasource.password=${DB_PASSWORD:your_database_password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:10}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.h2.console.enabled=false

# --- JPA Configuration ---
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=${JPA_DIALECT:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.open-in-view=false

# --- Security Configuration ---
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:your-github-client-id}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:your-github-client-secret}
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:password}

# --- Management and Monitoring ---
management.server.port=${MANAGEMENT_SERVER_PORT:8081}
management.server.ssl.enabled=${MANAGEMENT_SERVER_SSL_ENABLED:false}
management.server.ssl.key-password=${MANAGEMENT_SERVER_SSL_KEY:your_ssl_key_password}
management.info.java.enabled=true
management.info.process.enabled=true
management.endpoint.health.cache.time-to-live=1
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true
management.elastic.metrics.export.pipeline=aipower-pipeline
management.elastic.metrics.export.enabled=true
management.endpoints.web.cors.allow-credentials=false
management.endpoints.web.cors.allowed-headers=*
management.endpoints.web.cors.allowed-methods=*
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.exposed-headers=*
management.metrics.data.repository.autotime.percentiles-histogram=true
management.endpoint.health.show-components=always
management.server.base-path=/
management.endpoint.health.enabled=${MANAGEMENT_HEALTH_ENABLED:true}
management.endpoint.info.enabled=${MANAGEMENT_INFO_ENABLED:true}
management.endpoint.info.cache.time-to-live=1
management.server.address=${MANAGEMENT_SERVER_ADDRESS:localhost}

spring.jmx.enabled=true
spring.datasource.tomcat.jmx-enabled=true
spring.jmx.server=mbeanServer
spring.jmx.default-domain=aipower-domain
spring.jmx.unique-names=true
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=100
spring.datasource.tomcat.max-idle=20

# --- Mail Configuration ---
spring.mail.host=${MAIL_HOST:smtp.live.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@example.com}
spring.mail.password=${MAIL_PASSWORD:your-email-password}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE:true}

# --- Swagger Configuration ---
springdoc.api-docs.enabled=${SWAGGER_API_DOCS_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}
springdoc.api-docs.path=${SWAGGER_API_DOCS_PATH:/api-docs}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH:/swagger-ui/index.html}

# --- OpenAI ---
openai.api.url=${OPENAI_API_URL:https://api.openai.com/v1/chat/completions}
openai.api.key=${OPENAI_API_KEY:your-openai-api-key}

# --- Cache Configuration ---
spring.cache.type=jcache
spring.cache.jcache.provider=com.hazelcast.cache.HazelcastCachingProvider

# --- Spring Boot Admin ---
# Client Configuration
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.instance.service-url=http://localhost:8081
spring.boot.admin.client.instance.management-url=http://localhost:8081/actuator
spring.boot.admin.client.instance.health-url=http://localhost:8081/actuator/health
spring.boot.admin.client.username=${ADMIN_USERNAME:admin}
spring.boot.admin.client.password=${ADMIN_PASSWORD:password}
# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Timeout Configuration
spring.boot.admin.client.connect-timeout=5000
spring.boot.admin.client.read-timeout=5000
spring.boot.admin.client.instance.name=${SPRING_APPLICATION_NAME:AIPOWER}

spring.boot.admin.client.instance.metadata.instance-id=AIP-2024
spring.boot.admin.client.instance.service-path=/
spring.boot.admin.client.instance.service-base-url=http://localhost:8081

spring.boot.admin.client.instance.metadata.app-icon=classpath:favicon.ico
spring.boot.admin.client.instance.metadata.app-description=A Spring Boot application for AI Power
spring.boot.admin.instance-auth.default-password=${ADMIN_PASSWORD:your_password}
spring.boot.admin.instance-auth.default-user-name=${ADMIN_USERNAME:your_username}
spring.boot.admin.client.instance.service-host-type=host_name
spring.boot.admin.client.instance.metadata.app-name=AIPOWER-CLIENT
spring.boot.admin.client.instance.metadata.app-version=${SPRING_APPLICATION_VERSION:1.0.0}
spring.boot.admin.client.instance.metadata.app-type=social-network

# --- OAuth2 Google Configuration ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE:openid,profile,email}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
logging.level.org.springframework.jmx=DEBUG

# --- Kafka Configuration ---
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:ai-power-consumer}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
news.api.url=${NEWS_API_URL:https://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY}
news.api.key=${NEWS_API_KEY:your-news-api-key}
