plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '4.0.3'
}

group = 'com.sopotek'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springAiVersion', "1.0.0-M4")
    set('springBootAdminVersion', "3.4.0")
    set('springCloudVersion', "2024.0.0")
    set('springShellVersion', "3.4.0")
}

dependencies {
    implementation 'org.bouncycastle:bcprov-jdk18on:1.79'
    implementation group: 'net.glxn', name: 'qrgen', version: '1.4'

    // BouncyCastle PKIX and OpenSSL compatibility library
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.76'
    // Nimbus JOSE + JWT library for handling JWT creation and signing
    implementation 'com.nimbusds:nimbus-jose-jwt:9.47'

    // dotenv library for loading environment variables
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'network.lightsail:stellar-sdk:1.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.netty:netty-all:4.1.115.Final'
    implementation 'commons-fileupload:commons-fileupload:1.4'

    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.1'
    implementation 'de.codecentric:spring-boot-admin-starter-server:3.4.1'
    implementation "org.apache.kafka:kafka-clients:3.9.0"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.2'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.12'
    implementation 'com.hazelcast:hazelcast:5.5.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'com.github.ua-parser:uap-java:1.6.1'
    implementation 'io.github.cdimascio:dotenv-java:3.1.0'
    implementation 'org.apache.commons:commons-email:1.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'io.micrometer:micrometer-registry-jmx:1.14.2'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    implementation 'com.sun.activation:jakarta.activation:2.0.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.tensorflow:tensorflow-core-platform:1.0.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.shell:spring-shell-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


}
dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // or DuplicatesStrategy.INCLUDE based on your requirement
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
