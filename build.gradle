plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '4.0.3'

}

group = 'com.sopotek'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    snippetsDir = file("build/generated-snippets") as File
    springAiVersion = "1.0.0.M2"
    springBootAdminVersion = "3.3.6"
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'network.lightsail:stellar-sdk:1.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.netty:netty-all:4.1.115.Final'
    implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.0'
    implementation 'de.codecentric:spring-boot-admin-starter-server:3.3.6'
    implementation "org.apache.kafka:kafka-clients:3.9.0"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.1'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.12'

    implementation 'com.hazelcast:hazelcast:5.5.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    implementation 'com.github.ua-parser:uap-java:1.6.1'
    implementation 'io.github.cdimascio:dotenv-java:3.0.2'
    implementation 'org.apache.commons:commons-email:1.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'io.micrometer:micrometer-registry-jmx:1.11.4'

    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    implementation 'com.sun.activation:jakarta.activation:2.0.1'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'

    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6' // For JSON serialization

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

// https://mvnrepository.com/artifact/org.realityforge.org.jetbrains.annotations/org.jetbrains.annotations

    implementation group: 'org.realityforge.org.jetbrains.annotations', name: 'org.jetbrains.annotations', version: '1.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // Spring WebFlux enables Netty
    implementation 'io.netty:netty-all:4.1.115.Final' // Netty library
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    implementation 'org.tensorflow:tensorflow-core-platform:0.5.0'//tensorflow
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Required for JSON parsing

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn 'test'
}
configurations.configureEach {
    resolutionStrategy {
        force 'io.netty:netty-all:4.1.115.Final'
    }
}